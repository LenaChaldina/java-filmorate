DROP TABLE IF EXISTS "FILMS_LIKES";
DROP TABLE IF EXISTS "FEED_MODEL";
DROP TABLE IF EXISTS "USERS_FRIENDS";
DROP TABLE IF EXISTS "USERS_MODEL";


CREATE TABLE IF NOT EXISTS "USERS_MODEL"
(
    USER_ID  int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL    varchar unique,
    LOGIN    varchar unique,
    NAME     varchar,
    BIRTHDAY date
);


CREATE TABLE IF NOT EXISTS "USERS_FRIENDS"
(
    FRIENDS_ID     int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID        int REFERENCES "USERS_MODEL" (user_id),
    USER_FRIEND_ID int REFERENCES "USERS_MODEL" (user_id)
);

CREATE TABLE IF NOT EXISTS "GENRE_DICTIONARY"
(
    GENRE_ID          int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE_NAME        varchar
);

CREATE TABLE IF NOT EXISTS "MPA_DICTIONARY"
(
    MPA_ID             int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RATING             varchar
);

CREATE TABLE IF NOT EXISTS "FILMS_MODEL"
(
    FILM_ID      int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TITLE        varchar,
    DESCRIPTION  varchar,
    RELEASE_DATE date,
    DURATION     BIGINT,
    MPA_ID       int REFERENCES "MPA_DICTIONARY" (MPA_ID)
);

CREATE TABLE IF NOT EXISTS "FILMS_GENRES"
(
    FILM_GENRE_ID int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_ID       int REFERENCES "FILMS_MODEL" (FILM_ID),
    GENRE_ID      int REFERENCES "GENRE_DICTIONARY" (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS "FILMS_LIKES"
(
    LIKE_ID int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_ID int REFERENCES "FILMS_MODEL" (FILM_ID),
    USER_ID int REFERENCES "USERS_MODEL" (USER_ID)
);

CREATE TABLE IF NOT EXISTS "EVENT_DICTIONARY"
(
    EVENT_ID          int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EVENT_NAME        varchar
);

CREATE TABLE IF NOT EXISTS "OPERATION_DICTIONARY"
(
    OPERATION_ID          int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    OPERATION_NAME        varchar
);

CREATE TABLE IF NOT EXISTS "FEED_MODEL"
(
    EVENT_ID        bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TIMESTAMP       varchar,
    USER_ID         int REFERENCES "USERS_MODEL" (USER_ID),
    EVENT_TYPE      int REFERENCES "EVENT_DICTIONARY" (EVENT_ID),
    OPERATION_TYPE  int REFERENCES "OPERATION_DICTIONARY" (OPERATION_ID),
    ENTITY_ID       int
);